2020-09-10 15:31:19,267 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-10 15:31:19,271 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-10 15:31:19,908 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-10 15:31:19,911 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-10 15:31:21,452 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-10 15:31:21,616 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-10 15:31:21,666 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-10 15:31:21,840 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-10 15:31:21,888 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-10 15:31:22,073 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-10 15:31:22,129 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-10 15:31:22,336 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-10 15:31:22,383 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-10 15:31:22,552 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-10 15:31:24,889 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-10 15:31:24,890 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-10 15:31:25,330 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-10 15:31:25,330 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-10 15:31:25,543 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-10 15:31:25,544 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-10 15:31:25,786 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-10 15:31:25,787 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-10 15:31:25,995 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-10 15:31:25,996 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-10 15:31:26,318 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-10 15:31:26,318 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-10 15:31:32,557 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-10 15:31:32,557 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-10 15:31:33,157 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-10 15:31:33,157 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:22:16,075 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:22:16,079 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-11 15:22:16,763 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:22:16,764 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-11 15:22:18,595 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-11 15:22:18,767 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-11 15:22:18,859 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-11 15:22:19,042 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:22:19,126 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-11 15:22:19,311 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:22:19,409 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-11 15:22:19,599 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-11 15:22:19,686 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-11 15:22:19,870 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-11 15:22:21,522 - [test_03recharge_v3.py-->line:90] - ERROR: 用例不输入金额，执行未通过
2020-09-11 15:22:21,684 - [test_03recharge_v3.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-11 15:22:21,783 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额为负数，执行未通过
2020-09-11 15:22:21,955 - [test_03recharge_v3.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:22:22,041 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额为500001，执行未通过
2020-09-11 15:22:22,231 - [test_03recharge_v3.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:22:22,320 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额非数字，执行未通过
2020-09-11 15:22:22,490 - [test_03recharge_v3.py-->line:92] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-11 15:22:22,570 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-11 15:22:22,762 - [test_03recharge_v3.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-11 15:22:25,499 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-11 15:22:25,499 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:22:26,126 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-11 15:22:26,126 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:22:26,432 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-11 15:22:26,432 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:22:26,752 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-11 15:22:26,752 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-11 15:22:27,069 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-11 15:22:27,069 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-11 15:22:27,353 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-11 15:22:27,353 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:22:35,122 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-11 15:22:35,122 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:22:35,890 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-11 15:22:35,890 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:23:39,921 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:23:39,922 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-11 15:23:40,682 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:23:40,683 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-11 15:23:42,543 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-11 15:23:42,726 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-11 15:23:42,825 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-11 15:23:43,026 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:23:43,107 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-11 15:23:43,297 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:23:43,386 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-11 15:23:43,563 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-11 15:23:43,647 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-11 15:23:43,851 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-11 15:23:46,354 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-11 15:23:46,354 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:23:46,888 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-11 15:23:46,889 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:23:47,138 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-11 15:23:47,138 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:23:47,405 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-11 15:23:47,405 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-11 15:23:47,735 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-11 15:23:47,735 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-11 15:23:48,012 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-11 15:23:48,013 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:23:56,677 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-11 15:23:56,677 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:23:57,605 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-11 15:23:57,606 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:24:42,649 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:24:42,650 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-11 15:24:43,376 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:24:43,377 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-11 15:24:45,062 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-11 15:24:45,233 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-11 15:24:45,313 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-11 15:24:45,521 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:24:45,608 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-11 15:24:45,800 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:24:45,896 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-11 15:24:46,056 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-11 15:24:46,142 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-11 15:24:46,309 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-11 15:24:48,766 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-11 15:24:48,766 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:24:49,261 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-11 15:24:49,261 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:24:49,495 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-11 15:24:49,496 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:24:49,753 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-11 15:24:49,753 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-11 15:24:50,059 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-11 15:24:50,059 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-11 15:24:50,302 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-11 15:24:50,302 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:24:58,154 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-11 15:24:58,154 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:24:58,877 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-11 15:24:58,877 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:25:49,896 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:25:49,897 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-11 15:25:50,572 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:25:50,573 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-11 15:25:52,231 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-11 15:25:52,386 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-11 15:25:52,482 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-11 15:25:52,637 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:25:52,720 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-11 15:25:52,872 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:25:52,963 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-11 15:25:53,125 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-11 15:25:53,223 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-11 15:25:53,396 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-11 15:25:54,939 - [test_03recharge_v3.py-->line:90] - ERROR: 用例不输入金额，执行未通过
2020-09-11 15:25:55,102 - [test_03recharge_v3.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-11 15:25:55,189 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额为负数，执行未通过
2020-09-11 15:25:55,356 - [test_03recharge_v3.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:25:55,435 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额为500001，执行未通过
2020-09-11 15:25:55,605 - [test_03recharge_v3.py-->line:92] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:25:55,690 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额非数字，执行未通过
2020-09-11 15:25:55,851 - [test_03recharge_v3.py-->line:92] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-11 15:25:55,948 - [test_03recharge_v3.py-->line:90] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-11 15:25:56,108 - [test_03recharge_v3.py-->line:92] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge_v3.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-11 15:25:58,410 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-11 15:25:58,410 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:25:58,895 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-11 15:25:58,895 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-11 15:25:59,139 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-11 15:25:59,140 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:25:59,381 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-11 15:25:59,381 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-11 15:25:59,623 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-11 15:25:59,624 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-11 15:25:59,896 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-11 15:25:59,896 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-11 15:26:07,529 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-11 15:26:07,529 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-11 15:26:08,256 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-11 15:26:08,256 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
