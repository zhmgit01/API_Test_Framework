2020-09-08 09:42:06,682 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 09:42:06,689 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-08 09:42:07,284 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 09:42:07,287 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-08 09:42:08,713 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-08 09:42:08,922 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-08 09:42:08,973 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-08 09:42:09,122 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-08 09:42:09,171 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-08 09:42:09,336 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-08 09:42:09,385 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-08 09:42:09,545 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-08 09:42:09,592 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-08 09:42:09,751 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-08 09:42:11,781 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-08 09:42:11,782 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-08 09:42:12,222 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-08 09:42:12,222 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-08 09:42:12,420 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-08 09:42:12,421 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-08 09:42:12,643 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-08 09:42:12,643 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-08 09:42:12,870 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-08 09:42:12,871 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-08 09:42:13,168 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-08 09:42:13,168 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-08 09:42:19,228 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-08 09:42:19,228 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 09:42:19,832 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-08 09:42:19,832 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:28:35,690 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:28:35,694 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-08 10:28:36,394 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:28:36,394 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-08 10:28:38,325 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-08 10:28:38,468 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-08 10:28:38,564 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-08 10:28:38,717 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:28:38,804 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-08 10:28:38,986 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:28:39,067 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-08 10:28:39,240 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-08 10:28:39,327 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-08 10:28:39,488 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-08 10:28:41,857 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-08 10:28:41,858 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-08 10:28:42,343 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-08 10:28:42,343 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-08 10:28:42,573 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-08 10:28:42,573 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:28:42,868 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-08 10:28:42,868 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-08 10:28:43,117 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-08 10:28:43,117 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-08 10:28:43,676 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-08 10:28:43,677 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:28:51,156 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-08 10:28:51,156 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:28:51,876 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-08 10:28:51,876 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:30:36,197 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:30:36,200 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-08 10:30:36,825 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:30:36,826 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-08 10:30:38,523 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-08 10:30:38,677 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-08 10:30:38,769 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-08 10:30:38,921 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:30:39,009 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-08 10:30:39,154 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:30:39,242 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-08 10:30:39,387 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-08 10:30:39,468 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-08 10:30:39,606 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-08 10:30:41,846 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-08 10:30:41,846 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-08 10:30:42,295 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-08 10:30:42,295 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-08 10:30:42,522 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-08 10:30:42,522 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:30:42,760 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-08 10:30:42,760 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-08 10:30:42,990 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-08 10:30:42,990 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-08 10:30:43,294 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-08 10:30:43,295 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-08 10:30:50,548 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-08 10:30:50,548 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-08 10:30:51,232 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-08 10:30:51,232 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
