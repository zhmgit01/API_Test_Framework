2020-08-28 09:45:36,399 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 09:45:36,501 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 09:45:40,544 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 09:45:40,548 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 09:45:41,153 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 09:45:41,154 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 09:45:42,260 - [test_03recharge.py-->line:88] - ERROR: 用例充值成功，执行未通过
2020-08-28 09:45:42,324 - [test_03recharge.py-->line:90] - ERROR: Decimal('100.10') != '100.10'
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(end_amount - start_amount, eval(item['data'])['amount'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('100.10') != '100.10'
2020-08-28 09:45:42,400 - [test_03recharge.py-->line:88] - ERROR: 用例id错误，执行未通过
2020-08-28 09:45:42,490 - [test_03recharge.py-->line:90] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-08-28 09:45:42,567 - [test_03recharge.py-->line:88] - ERROR: 用例不输入id，执行未通过
2020-08-28 09:45:42,645 - [test_03recharge.py-->line:90] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-08-28 09:45:42,723 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 09:45:42,800 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 09:45:42,877 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 09:45:42,948 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 09:45:43,023 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 09:45:43,097 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 09:45:43,170 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 09:45:43,235 - [test_03recharge.py-->line:90] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-08-28 09:45:43,309 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 09:45:43,379 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 13:15:20,507 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 13:15:20,579 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 13:15:23,996 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:15:23,997 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 13:15:24,536 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:15:24,536 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 13:15:24,980 - [test_03recharge.py-->line:88] - ERROR: 用例充值成功，执行未通过
2020-08-28 13:15:25,056 - [test_03recharge.py-->line:90] - ERROR: Decimal('100.10') != 100.1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(end_amount - start_amount, eval(item['data'])['amount'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('100.10') != 100.1
2020-08-28 13:15:25,148 - [test_03recharge.py-->line:88] - ERROR: 用例id错误，执行未通过
2020-08-28 13:15:25,231 - [test_03recharge.py-->line:90] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-08-28 13:15:25,316 - [test_03recharge.py-->line:88] - ERROR: 用例不输入id，执行未通过
2020-08-28 13:15:25,407 - [test_03recharge.py-->line:90] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-08-28 13:15:25,495 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 13:15:25,568 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:15:25,653 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 13:15:25,743 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:15:25,849 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 13:15:25,935 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:15:26,022 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 13:15:26,094 - [test_03recharge.py-->line:90] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-08-28 13:15:26,187 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 13:15:26,277 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 13:18:41,342 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 13:18:41,418 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 13:18:44,815 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:18:44,816 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 13:18:45,388 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:18:45,389 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 13:18:45,922 - [test_03recharge.py-->line:88] - ERROR: 用例id错误，执行未通过
2020-08-28 13:18:46,010 - [test_03recharge.py-->line:90] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-08-28 13:18:46,093 - [test_03recharge.py-->line:88] - ERROR: 用例不输入id，执行未通过
2020-08-28 13:18:46,170 - [test_03recharge.py-->line:90] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-08-28 13:18:46,257 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 13:18:46,352 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:18:46,436 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 13:18:46,514 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:18:46,598 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 13:18:46,665 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:18:46,746 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 13:18:46,828 - [test_03recharge.py-->line:90] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-08-28 13:18:46,926 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 13:18:47,013 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 13:20:22,477 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 13:20:22,547 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 13:20:25,830 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:20:25,831 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 13:20:26,352 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:20:26,353 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 13:20:26,904 - [test_03recharge.py-->line:88] - ERROR: 用例id错误，执行未通过
2020-08-28 13:20:26,980 - [test_03recharge.py-->line:90] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-08-28 13:20:27,070 - [test_03recharge.py-->line:88] - ERROR: 用例不输入id，执行未通过
2020-08-28 13:20:27,140 - [test_03recharge.py-->line:90] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-08-28 13:20:27,235 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 13:20:27,315 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:20:27,400 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 13:20:27,478 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:20:27,585 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 13:20:27,651 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:20:27,740 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 13:20:27,827 - [test_03recharge.py-->line:90] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-08-28 13:20:27,911 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 13:20:27,986 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 13:22:12,208 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 13:22:12,282 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 13:22:15,628 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:22:15,629 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 13:22:16,153 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:22:16,154 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 13:22:16,603 - [test_03recharge.py-->line:88] - ERROR: 用例充值成功，执行未通过
2020-08-28 13:22:16,688 - [test_03recharge.py-->line:90] - ERROR: 'ok' != 'OK'
- ok
+ OK
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: 'ok' != 'OK'
- ok
+ OK

2020-08-28 13:22:16,777 - [test_03recharge.py-->line:88] - ERROR: 用例id错误，执行未通过
2020-08-28 13:22:16,878 - [test_03recharge.py-->line:90] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-08-28 13:22:16,962 - [test_03recharge.py-->line:88] - ERROR: 用例不输入id，执行未通过
2020-08-28 13:22:17,109 - [test_03recharge.py-->line:90] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-08-28 13:22:17,206 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 13:22:17,317 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:22:17,414 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 13:22:17,496 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:22:17,576 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 13:22:17,658 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:22:17,744 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 13:22:17,840 - [test_03recharge.py-->line:90] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-08-28 13:22:17,930 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 13:22:18,000 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 13:23:24,024 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 13:23:24,098 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 13:23:27,287 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:23:27,288 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 13:23:27,806 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:23:27,807 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 13:23:28,401 - [test_03recharge.py-->line:88] - ERROR: 用例id错误，执行未通过
2020-08-28 13:23:28,474 - [test_03recharge.py-->line:90] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-08-28 13:23:28,564 - [test_03recharge.py-->line:88] - ERROR: 用例不输入id，执行未通过
2020-08-28 13:23:28,636 - [test_03recharge.py-->line:90] - ERROR: 0 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-08-28 13:23:28,717 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 13:23:28,804 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:23:28,907 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 13:23:29,018 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:23:29,116 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 13:23:29,238 - [test_03recharge.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 13:23:29,327 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 13:23:29,441 - [test_03recharge.py-->line:90] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-08-28 13:23:29,536 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 13:23:29,617 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 13:34:31,308 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 13:34:38,736 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:34:38,738 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 13:34:39,750 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 13:34:39,753 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 13:34:42,465 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 13:34:42,925 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 13:34:43,319 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 13:34:43,722 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 13:34:44,129 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:15:38,049 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:15:41,003 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:15:41,004 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:15:41,466 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:15:41,467 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:15:42,572 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:15:42,753 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:15:42,890 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:15:43,040 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:15:43,170 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:16:54,087 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:16:54,198 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:16:58,287 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:16:58,288 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:16:58,980 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:16:58,981 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:17:00,539 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:17:00,659 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:17:00,747 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:17:00,887 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:17:00,984 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:17:01,112 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:17:01,200 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:17:01,335 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:17:01,428 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:17:01,559 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:18:14,656 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:18:14,779 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:18:18,758 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:18:18,759 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:18:19,376 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:18:19,377 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:18:20,928 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:18:21,056 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:18:21,139 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:18:21,310 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:18:21,390 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:18:21,532 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:18:21,620 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:18:21,753 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:18:21,831 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:18:21,966 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:20:08,047 - [test_01login.py-->line:47] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:20:08,167 - [test_01login.py-->line:49] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:20:12,354 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:20:12,355 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:20:12,987 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:20:12,987 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:20:14,556 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:20:14,682 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:20:14,772 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:20:14,918 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:20:15,008 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:20:15,145 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:20:15,244 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:20:15,381 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:20:15,464 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:20:15,602 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:25:11,517 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:25:11,652 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:25:15,786 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:25:15,790 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:25:16,392 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:25:16,392 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:25:17,947 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:25:18,064 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:25:18,160 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:25:18,280 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:25:18,370 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:25:18,496 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:25:18,594 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:25:18,722 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:25:18,812 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:25:18,944 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:25:55,100 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:25:55,225 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:25:59,303 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:25:59,306 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:25:59,942 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:25:59,942 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:26:01,464 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:26:01,592 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:26:01,678 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:26:01,795 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:26:01,888 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:26:02,013 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:26:02,106 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:26:02,222 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:26:02,302 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:26:02,420 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:26:02,615 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 14:26:02,615 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:26:02,817 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 14:26:02,817 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:26:03,044 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 14:26:03,044 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:26:03,258 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 14:26:03,258 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:26:04,122 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 14:26:04,122 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:26:04,326 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 14:26:04,327 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:26:04,551 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 14:26:04,551 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 14:26:04,773 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 14:26:04,773 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 14:26:05,039 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 14:26:05,040 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:28:31,359 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:28:31,482 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:28:35,831 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:28:35,833 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:28:36,497 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:28:36,498 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:28:38,094 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:28:38,217 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:28:38,304 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:28:38,447 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:28:38,533 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:28:38,661 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:28:38,750 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:28:38,889 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:28:38,980 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:28:39,112 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:28:39,296 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 14:28:39,296 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:28:39,523 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 14:28:39,523 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:28:39,747 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 14:28:39,747 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:28:39,968 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 14:28:39,969 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:28:40,179 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 14:28:40,179 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:28:41,044 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 14:28:41,044 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:28:41,264 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 14:28:41,265 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:28:41,489 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 14:28:41,490 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 14:28:41,707 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 14:28:41,707 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 14:28:41,943 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 14:28:41,943 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:32:11,973 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:32:12,095 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:32:16,059 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:32:16,060 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:32:16,671 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:32:16,672 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:32:18,178 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:32:18,305 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:32:18,388 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:32:18,531 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:32:18,621 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:32:18,751 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:32:18,853 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:32:18,987 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:32:19,083 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:32:19,214 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:32:19,395 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 14:32:19,395 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:32:19,610 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 14:32:19,610 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:32:19,825 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 14:32:19,825 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:32:20,051 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 14:32:20,051 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:32:20,269 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 14:32:20,270 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:32:21,132 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 14:32:21,132 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:32:21,345 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 14:32:21,345 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:32:21,566 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 14:32:21,566 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 14:32:21,804 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 14:32:21,804 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 14:32:22,016 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 14:32:22,016 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:35:02,455 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 14:35:02,572 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 14:35:06,557 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:35:06,559 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 14:35:07,155 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:35:07,157 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 14:35:08,701 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 14:35:08,815 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 14:35:08,896 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 14:35:09,026 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:35:09,110 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 14:35:09,239 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 14:35:09,326 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 14:35:09,459 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 14:35:09,547 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 14:35:09,685 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 14:35:09,865 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 14:35:09,865 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:35:10,076 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 14:35:10,076 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:35:10,297 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 14:35:10,297 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:35:10,535 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 14:35:10,535 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:35:10,746 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 14:35:10,746 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 14:35:11,600 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 14:35:11,600 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:35:11,810 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 14:35:11,810 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 14:35:12,032 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 14:35:12,032 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 14:35:12,268 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 14:35:12,269 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 14:35:12,513 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 14:35:12,513 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:41:58,479 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 15:41:58,611 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 15:42:02,784 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:42:02,785 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 15:42:03,406 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:42:03,407 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 15:42:04,732 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 15:42:04,841 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 15:42:04,890 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 15:42:05,015 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:42:05,064 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 15:42:05,184 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:42:05,235 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 15:42:05,348 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 15:42:05,402 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 15:42:05,525 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 15:42:05,915 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 15:42:05,916 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:42:06,077 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 15:42:06,077 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:42:06,250 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 15:42:06,250 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:42:06,409 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 15:42:06,409 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:42:06,598 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 15:42:06,598 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:42:07,309 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 15:42:07,309 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:42:07,468 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 15:42:07,469 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:42:07,644 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 15:42:07,644 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 15:42:07,833 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 15:42:07,833 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 15:42:08,004 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 15:42:08,004 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:45:53,041 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 15:46:12,255 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 15:46:12,771 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 15:46:21,604 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:46:21,606 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 15:46:22,857 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:46:22,860 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 15:46:25,981 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 15:46:26,453 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 15:46:26,514 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 15:46:26,971 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:46:27,030 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 15:46:27,485 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:46:27,544 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 15:46:27,995 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 15:46:28,059 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 15:46:28,529 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 15:48:47,129 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 15:48:47,404 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:49:00,869 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 15:49:01,060 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:49:13,295 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 15:49:13,638 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:49:26,590 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 15:49:26,842 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:49:41,175 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 15:49:41,397 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:53:52,519 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 15:53:52,627 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 15:53:56,242 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:53:56,243 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 15:53:56,828 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:53:56,829 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 15:53:58,452 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 15:53:58,575 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 15:53:58,625 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 15:53:58,748 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:53:58,802 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 15:53:58,928 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:53:59,005 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 15:53:59,139 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 15:53:59,198 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 15:53:59,322 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 15:53:59,449 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 15:53:59,449 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:53:59,670 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 15:53:59,671 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:53:59,882 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 15:53:59,882 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:54:00,070 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 15:54:00,070 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:54:00,586 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 15:54:00,587 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:54:01,349 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 15:54:01,350 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:54:01,563 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 15:54:01,563 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:54:01,737 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 15:54:01,738 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 15:54:01,969 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 15:54:01,969 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 15:54:02,156 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 15:54:02,156 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:55:25,807 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 15:55:25,923 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 15:55:29,497 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:55:29,498 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 15:55:30,493 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:55:30,496 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 15:55:31,949 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 15:55:32,059 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 15:55:32,105 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 15:55:32,229 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:55:32,275 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 15:55:32,382 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 15:55:32,427 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 15:55:32,548 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 15:55:32,598 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 15:55:32,724 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 15:55:33,108 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 15:55:33,108 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:55:33,262 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 15:55:33,262 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:55:33,430 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 15:55:33,431 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:55:33,588 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 15:55:33,589 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:55:33,776 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 15:55:33,777 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 15:55:34,310 - [test_04withdraw.py-->line:66] - ERROR: 用例会员id为数值：执行失败
2020-08-28 15:55:34,310 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常

2020-08-28 15:55:34,628 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 15:55:34,628 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:55:34,801 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 15:55:34,801 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 15:55:34,969 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 15:55:34,969 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 15:55:35,136 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 15:55:35,136 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 15:55:35,353 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 15:55:35,353 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 16:05:10,693 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 16:05:10,817 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 16:05:14,621 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:05:14,622 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:05:15,123 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:05:15,124 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:05:16,571 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:05:16,684 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 16:05:16,736 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:05:16,871 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:05:16,921 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:05:17,036 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:05:17,085 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:05:17,206 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 16:05:17,256 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:05:17,374 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 16:05:17,479 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-整数：执行失败
2020-08-28 16:05:17,479 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:05:17,643 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-1位小数：执行失败
2020-08-28 16:05:17,643 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:05:17,812 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-2位小数：执行失败
2020-08-28 16:05:17,813 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:05:17,983 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 16:05:17,983 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:05:18,151 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 16:05:18,152 - [test_04withdraw.py-->line:67] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:05:18,651 - [test_04withdraw.py-->line:66] - ERROR: 用例会员id为数值：执行失败
2020-08-28 16:05:18,651 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '数字格式化异常'
- 数值参数格式不正确
+ 数字格式化异常

2020-08-28 16:05:18,985 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 16:05:18,985 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 16:05:19,164 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 16:05:19,164 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 16:05:19,327 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 16:05:19,328 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 16:05:19,508 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 16:05:19,508 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 16:05:19,740 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 16:05:19,740 - [test_04withdraw.py-->line:67] - ERROR: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '数值参数格式不正确' != '金额必须大于0并且小于或者等于500000'
- 数值参数格式不正确
+ 金额必须大于0并且小于或者等于500000

2020-08-28 16:22:07,039 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 16:22:14,114 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:22:14,116 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:22:15,099 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:22:15,101 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:22:17,394 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:22:17,760 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:22:18,120 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:22:18,485 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:22:18,858 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:23:02,017 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 16:23:08,750 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:23:08,751 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:23:09,698 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:23:09,699 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:23:12,312 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:23:12,674 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:23:13,048 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:23:13,437 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:23:13,809 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:23:32,657 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 16:23:39,577 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:23:39,579 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:23:40,619 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:23:40,624 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:23:43,265 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:23:43,628 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:23:43,993 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:23:44,357 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:23:44,723 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:23:46,496 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 16:23:46,497 - [test_04withdraw.py-->line:67] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:23:47,144 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 16:23:47,145 - [test_04withdraw.py-->line:67] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:23:48,456 - [test_04withdraw.py-->line:66] - ERROR: 用例会员id为数值：执行失败
2020-08-28 16:23:48,456 - [test_04withdraw.py-->line:67] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:23:49,428 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 16:23:49,429 - [test_04withdraw.py-->line:67] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:23:49,836 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 16:23:49,836 - [test_04withdraw.py-->line:67] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:23:50,200 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 16:23:50,200 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 16:23:50,576 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 16:23:50,577 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 16:23:50,937 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 16:23:50,937 - [test_04withdraw.py-->line:67] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:24:20,966 - [test_01login.py-->line:46] - ERROR: 用例登录成功,执行未通过
2020-08-28 16:24:21,093 - [test_01login.py-->line:48] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 43, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-08-28 16:24:24,471 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:24:24,472 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:24:25,214 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:24:25,215 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:24:26,745 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:24:26,861 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 16:24:26,910 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:24:27,046 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:24:27,094 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:24:27,229 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:24:27,277 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:24:27,393 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 16:24:27,442 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:24:27,574 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 16:24:28,478 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 16:24:28,479 - [test_04withdraw.py-->line:67] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:24:28,652 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 16:24:28,653 - [test_04withdraw.py-->line:67] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:24:29,194 - [test_04withdraw.py-->line:66] - ERROR: 用例会员id为数值：执行失败
2020-08-28 16:24:29,194 - [test_04withdraw.py-->line:67] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:24:29,554 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 16:24:29,555 - [test_04withdraw.py-->line:67] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:24:29,724 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 16:24:29,724 - [test_04withdraw.py-->line:67] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:24:29,907 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 16:24:29,907 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 16:24:30,082 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 16:24:30,082 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 16:24:30,310 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 16:24:30,310 - [test_04withdraw.py-->line:67] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:29:01,866 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:29:01,868 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:29:02,460 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:29:02,461 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:29:04,056 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:29:04,197 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 16:29:04,250 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:29:04,396 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:29:04,448 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:29:04,570 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:29:04,623 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:29:04,756 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 16:29:04,807 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:29:04,934 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 16:29:05,811 - [test_04withdraw.py-->line:66] - ERROR: 用例提现成功-50万：执行失败
2020-08-28 16:29:05,811 - [test_04withdraw.py-->line:67] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:29:05,991 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 16:29:05,991 - [test_04withdraw.py-->line:67] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:29:06,540 - [test_04withdraw.py-->line:66] - ERROR: 用例会员id为数值：执行失败
2020-08-28 16:29:06,540 - [test_04withdraw.py-->line:67] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:29:06,900 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为0：执行失败
2020-08-28 16:29:06,900 - [test_04withdraw.py-->line:67] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 63, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:29:07,087 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 16:29:07,087 - [test_04withdraw.py-->line:67] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:29:07,301 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额为空：执行失败
2020-08-28 16:29:07,302 - [test_04withdraw.py-->line:67] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 16:29:07,485 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 16:29:07,485 - [test_04withdraw.py-->line:67] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 16:29:07,732 - [test_04withdraw.py-->line:66] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 16:29:07,732 - [test_04withdraw.py-->line:67] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:36:18,881 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:36:18,884 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:36:20,431 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:36:20,432 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:36:23,583 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:36:24,068 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 16:36:24,129 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:36:24,613 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:36:24,678 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:36:25,155 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:36:25,216 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:36:25,695 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 16:36:25,757 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:36:26,226 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 16:37:59,098 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:37:59,102 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:38:00,658 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:38:00,660 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:38:03,870 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:38:04,344 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 16:38:04,408 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:38:04,889 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:38:05,243 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:38:05,730 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:38:05,795 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:38:06,279 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 16:38:06,341 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:38:06,828 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 16:41:28,623 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:41:28,627 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:41:29,209 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:41:29,210 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:41:30,540 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:41:30,658 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 16:41:30,704 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:41:30,830 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:41:30,879 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:41:30,997 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:41:31,043 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:41:31,171 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 16:41:31,218 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:41:31,363 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 16:41:33,383 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 16:41:33,383 - [test_04withdraw.py-->line:77] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:41:33,887 - [test_04withdraw.py-->line:76] - ERROR: 用例会员id为数值：执行失败
2020-08-28 16:41:33,887 - [test_04withdraw.py-->line:77] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 16:41:34,230 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为0：执行失败
2020-08-28 16:41:34,231 - [test_04withdraw.py-->line:77] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:41:34,412 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 16:41:34,412 - [test_04withdraw.py-->line:77] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:41:34,591 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为空：执行失败
2020-08-28 16:41:34,591 - [test_04withdraw.py-->line:77] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 16:41:34,750 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 16:41:34,750 - [test_04withdraw.py-->line:77] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 16:41:34,934 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 16:41:34,935 - [test_04withdraw.py-->line:77] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:43:52,495 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:43:52,497 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 16:43:53,056 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 16:43:53,057 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 16:43:54,645 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 16:43:54,771 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 16:43:54,823 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 16:43:54,957 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:43:55,011 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 16:43:55,137 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:43:55,186 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 16:43:55,315 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 16:43:55,368 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 16:43:55,514 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 16:43:57,807 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 16:43:57,807 - [test_04withdraw.py-->line:77] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 16:43:58,334 - [test_04withdraw.py-->line:76] - ERROR: 用例会员id为数值：执行失败
2020-08-28 16:43:58,335 - [test_04withdraw.py-->line:77] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:43:58,901 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为0：执行失败
2020-08-28 16:43:58,901 - [test_04withdraw.py-->line:77] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 16:43:59,068 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 16:43:59,069 - [test_04withdraw.py-->line:77] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 16:43:59,256 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为空：执行失败
2020-08-28 16:43:59,256 - [test_04withdraw.py-->line:77] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 16:43:59,418 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 16:43:59,419 - [test_04withdraw.py-->line:77] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 16:43:59,600 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 16:43:59,600 - [test_04withdraw.py-->line:77] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 17:18:39,396 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 17:18:39,398 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 17:18:39,922 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 17:18:39,923 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 17:18:41,170 - [test_03recharge.py-->line:88] - ERROR: 用例不输入金额，执行未通过
2020-08-28 17:18:41,283 - [test_03recharge.py-->line:90] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 17:18:41,333 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 17:18:41,455 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 17:18:41,505 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 17:18:41,628 - [test_03recharge.py-->line:90] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 17:18:41,679 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 17:18:41,793 - [test_03recharge.py-->line:90] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 17:18:41,842 - [test_03recharge.py-->line:88] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 17:18:41,964 - [test_03recharge.py-->line:90] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 17:18:43,250 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 17:18:43,250 - [test_04withdraw.py-->line:77] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 17:18:43,757 - [test_04withdraw.py-->line:76] - ERROR: 用例会员id为数值：执行失败
2020-08-28 17:18:43,757 - [test_04withdraw.py-->line:77] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 17:18:44,107 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为0：执行失败
2020-08-28 17:18:44,108 - [test_04withdraw.py-->line:77] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 73, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 17:18:44,275 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 17:18:44,276 - [test_04withdraw.py-->line:77] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 17:18:44,450 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额为空：执行失败
2020-08-28 17:18:44,451 - [test_04withdraw.py-->line:77] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 17:18:44,613 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 17:18:44,613 - [test_04withdraw.py-->line:77] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 17:18:44,786 - [test_04withdraw.py-->line:76] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 17:18:44,786 - [test_04withdraw.py-->line:77] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 74, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 18:28:31,104 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 18:28:31,106 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 18:28:31,642 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 18:28:31,643 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 18:28:32,931 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 18:28:33,048 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 18:28:33,104 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 18:28:33,241 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 18:28:33,292 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 18:28:33,416 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 18:28:33,467 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 18:28:33,586 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 18:28:33,639 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 18:28:33,766 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 18:28:35,105 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额大于账户余额：执行失败
2020-08-28 18:28:35,105 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 0
2020-08-28 18:28:35,647 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 18:28:35,647 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 18:28:36,009 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 18:28:36,010 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 18:28:36,185 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 18:28:36,185 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 18:28:36,363 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 18:28:36,363 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 18:28:36,539 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 18:28:36,540 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 18:28:36,718 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 18:28:36,719 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:04:27,763 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:04:27,896 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:04:31,386 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:04:31,387 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:04:31,991 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:04:31,992 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:04:33,266 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:04:33,395 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:04:33,440 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:04:33,581 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:04:33,625 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:04:33,755 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:04:33,801 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:04:33,941 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:04:33,987 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:04:34,123 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:04:35,946 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 19:04:35,946 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 19:04:36,358 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 19:04:36,358 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:04:36,549 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 19:04:36,549 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:04:36,762 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 19:04:36,762 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 19:04:36,967 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 19:04:36,967 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 19:04:37,151 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 19:04:37,151 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:05:12,888 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:05:13,026 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:05:16,470 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:05:16,473 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:05:17,045 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:05:17,046 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:05:18,298 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:05:18,427 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:05:18,472 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:05:18,614 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:05:18,660 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:05:18,786 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:05:18,830 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:05:18,968 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:05:19,011 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:05:19,166 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:05:20,525 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 19:05:20,525 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 19:05:20,886 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 19:05:20,886 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:05:21,065 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 19:05:21,065 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:05:21,243 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 19:05:21,244 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 19:05:21,420 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 19:05:21,420 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 19:05:21,606 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 19:05:21,606 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:06:21,984 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:06:22,121 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:06:25,600 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:06:25,601 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:06:26,174 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:06:26,175 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:06:27,413 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:06:27,547 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:06:27,595 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:06:27,718 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:06:27,766 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:06:27,905 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:06:27,956 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:06:28,100 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:06:28,151 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:06:28,274 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:06:29,524 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 19:06:29,524 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 19:06:29,893 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 19:06:29,893 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:06:30,077 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 19:06:30,077 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:06:30,261 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 19:06:30,261 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 19:06:30,448 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 19:06:30,449 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 19:06:30,626 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 19:06:30,626 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:24:52,725 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:24:52,847 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:24:56,574 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:24:56,575 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:24:57,213 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:24:57,214 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:24:58,575 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:24:58,705 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:24:58,756 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:24:58,898 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:24:58,947 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:24:59,070 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:24:59,123 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:24:59,260 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:24:59,309 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:24:59,460 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:25:01,068 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 19:25:01,069 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 19:25:01,437 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 19:25:01,437 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:25:01,623 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 19:25:01,624 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:25:01,818 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 19:25:01,818 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 19:25:01,989 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 19:25:01,990 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 19:25:02,175 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 19:25:02,175 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:26:08,225 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:26:08,754 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:26:18,421 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:26:18,423 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:26:19,758 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:26:19,759 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:26:34,867 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:26:35,445 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:26:45,867 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:26:45,869 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:26:47,204 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:26:47,208 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:26:50,535 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:26:51,045 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:26:51,109 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:26:51,622 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:26:51,693 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:26:52,203 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:26:52,272 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:26:52,785 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:26:52,847 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:26:53,364 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:27:09,036 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:27:09,619 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:27:19,213 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:27:19,215 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:27:20,527 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:27:20,529 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:27:23,813 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:27:24,319 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:27:24,383 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:27:24,885 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:27:24,947 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:27:25,451 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:27:25,512 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:27:26,015 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:27:26,076 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:27:26,634 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:27:29,341 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 19:27:29,342 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 19:27:30,456 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 19:27:30,457 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:27:31,033 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 19:27:31,033 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:27:31,610 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 19:27:31,611 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 19:27:32,190 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 19:27:32,190 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 19:27:32,770 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 19:27:32,771 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:29:46,228 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:29:46,754 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:29:56,132 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:29:56,135 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:29:57,519 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:29:57,521 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:30:00,833 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:30:01,349 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:30:01,411 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:30:01,922 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:30:01,981 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:30:02,492 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:30:02,551 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:30:03,069 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:30:03,128 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:30:03,642 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:30:05,844 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 19:30:05,845 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 19:30:07,010 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 19:30:07,011 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:30:07,582 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 19:30:07,582 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:30:08,154 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 19:30:08,154 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 19:30:08,727 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 19:30:08,727 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 19:30:09,297 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 19:30:09,298 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:30:59,262 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-28 19:30:59,391 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:31:03,496 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:31:03,499 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-28 19:31:04,086 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-28 19:31:04,087 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-28 19:31:05,463 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-28 19:31:05,601 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-28 19:31:05,646 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-28 19:31:05,791 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:31:05,836 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-28 19:31:05,957 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:31:06,005 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-28 19:31:06,155 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-28 19:31:06,202 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-28 19:31:06,361 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-28 19:31:07,827 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-28 19:31:07,827 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-28 19:31:08,189 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-28 19:31:08,189 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-28 19:31:08,372 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-28 19:31:08,372 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-28 19:31:08,552 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-28 19:31:08,552 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-28 19:31:08,741 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-28 19:31:08,741 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-28 19:31:08,913 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-28 19:31:08,913 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

