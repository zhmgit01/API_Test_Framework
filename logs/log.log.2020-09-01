2020-08-31 10:04:50,812 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 10:04:50,921 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:04:55,331 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:04:55,345 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 10:04:55,989 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:04:55,989 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 10:04:57,468 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 10:04:57,593 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 10:04:57,691 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 10:04:57,847 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:04:57,926 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 10:04:58,097 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:04:58,191 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 10:04:58,347 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 10:04:58,425 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 10:04:58,566 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 10:05:00,228 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 10:05:00,243 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-31 10:05:00,693 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 10:05:00,693 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:05:00,911 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 10:05:00,911 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:05:01,146 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 10:05:01,146 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 10:05:01,351 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 10:05:01,351 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 10:05:01,590 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 10:05:01,590 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:07:12,631 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 10:07:12,762 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:07:16,758 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:07:16,758 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 10:07:17,437 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:07:17,437 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 10:07:18,861 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 10:07:18,972 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 10:07:19,064 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 10:07:19,176 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:07:19,260 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 10:07:19,438 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:07:19,523 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 10:07:19,661 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 10:07:19,739 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 10:07:19,846 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 10:07:21,649 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 10:07:21,649 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-31 10:07:22,130 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 10:07:22,130 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:07:22,329 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 10:07:22,329 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:07:22,545 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 10:07:22,545 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 10:07:22,768 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 10:07:22,768 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 10:07:22,968 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 10:07:22,968 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:08:56,328 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 10:08:56,461 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:09:00,470 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:09:00,470 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 10:09:01,109 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:09:01,109 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 10:09:02,589 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 10:09:02,743 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 10:09:02,828 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 10:09:02,959 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:09:03,059 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 10:09:03,176 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:09:03,275 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 10:09:03,391 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 10:09:03,476 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 10:09:03,592 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 10:09:05,266 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 10:09:05,266 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-31 10:09:05,667 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 10:09:05,667 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:09:05,883 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 10:09:05,883 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:09:06,114 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 10:09:06,114 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 10:09:06,284 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 10:09:06,284 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 10:09:06,484 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 10:09:06,484 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:10:08,753 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 10:10:08,869 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:10:13,007 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:10:13,007 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 10:10:13,678 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:10:13,678 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 10:10:15,113 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 10:10:15,251 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 10:10:15,352 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 10:10:15,451 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:10:15,536 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 10:10:15,636 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:10:15,736 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 10:10:15,868 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 10:10:15,952 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 10:10:16,069 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 10:10:17,776 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 10:10:17,776 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-31 10:10:18,179 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 10:10:18,179 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:10:18,364 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 10:10:18,364 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:10:18,565 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 10:10:18,565 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 10:10:18,765 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 10:10:18,765 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 10:10:18,997 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 10:10:18,997 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:10:55,886 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 10:10:56,022 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:11:00,433 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:11:00,448 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 10:11:01,069 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:11:01,069 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 10:11:02,483 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 10:11:02,599 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 10:11:02,701 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 10:11:02,799 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:11:02,884 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 10:11:03,022 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:11:03,116 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 10:11:03,215 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 10:11:03,300 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 10:11:03,423 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 10:11:05,134 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 10:11:05,134 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-31 10:11:05,571 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 10:11:05,571 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:11:05,755 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 10:11:05,755 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:11:05,956 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 10:11:05,956 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 10:11:06,134 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 10:11:06,134 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 10:11:06,357 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 10:11:06,357 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:12:26,200 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 10:12:26,316 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:12:30,309 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:12:30,309 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 10:12:30,962 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 10:12:30,962 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 10:12:32,465 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 10:12:32,581 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 10:12:32,661 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 10:12:32,781 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:12:32,881 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 10:12:33,013 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:12:33,098 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 10:12:33,213 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 10:12:33,314 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 10:12:33,461 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 10:12:35,220 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 10:12:35,220 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-31 10:12:35,629 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 10:12:35,629 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 10:12:35,852 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 10:12:35,852 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 10:12:36,053 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 10:12:36,053 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 10:12:36,254 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 10:12:36,254 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 10:12:36,454 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 10:12:36,454 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:00:20,944 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 11:00:21,075 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 11:00:25,168 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 11:00:25,172 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 11:00:25,772 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 11:00:25,773 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 11:00:27,228 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 11:00:27,371 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 11:00:27,464 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 11:00:27,590 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:00:27,691 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 11:00:27,800 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:00:27,883 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 11:00:28,005 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 11:00:28,090 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 11:00:28,204 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 11:00:29,821 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 11:00:29,821 - [test_04withdraw.py-->line:79] - ERROR: 1002 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1002 != 2
2020-08-31 11:00:30,237 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 11:00:30,238 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 11:00:30,438 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 11:00:30,438 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:00:30,658 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 11:00:30,658 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 11:00:30,888 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 11:00:30,888 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 11:00:31,113 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 11:00:31,113 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:29:24,788 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 11:29:24,912 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 11:29:29,100 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 11:29:29,104 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 11:29:29,737 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 11:29:29,739 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 11:29:31,241 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 11:29:31,390 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 11:29:31,474 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 11:29:31,619 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:29:31,715 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 11:29:31,869 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:29:31,946 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 11:29:32,070 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 11:29:32,164 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 11:29:32,296 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 11:29:34,500 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 11:29:34,501 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 11:29:34,947 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 11:29:34,947 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 11:29:35,174 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 11:29:35,174 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 11:29:35,439 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 11:29:35,439 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 11:29:35,633 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 11:29:35,634 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 11:29:35,842 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 11:29:35,843 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:36:58,016 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:36:58,136 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:37:02,519 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:37:02,520 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:37:03,196 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:37:03,197 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:37:04,642 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:37:04,759 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:37:04,853 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:37:04,980 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:37:05,080 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:37:05,205 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:37:05,288 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:37:05,419 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:37:05,500 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:37:05,633 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:37:07,732 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:37:07,732 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:37:08,174 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:37:08,174 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:37:08,428 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:37:08,428 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:37:08,637 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:37:08,637 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:37:08,847 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:37:08,847 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:37:09,065 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:37:09,065 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:37:13,908 - [test_07invest.py-->line:82] - ERROR: 用例借款人加标，执行失败
2020-08-31 13:37:13,908 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:37:14,110 - [test_07invest.py-->line:82] - ERROR: 用例管理员审核，执行失败
2020-08-31 13:37:14,110 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:37:14,317 - [test_07invest.py-->line:82] - ERROR: 用例充值成功-整数，执行失败
2020-08-31 13:37:14,317 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:37:14,541 - [test_07invest.py-->line:82] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 13:37:14,541 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:37:14,764 - [test_07invest.py-->line:82] - ERROR: 用例投资人id为空，执行失败
2020-08-31 13:37:14,764 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:37:14,978 - [test_07invest.py-->line:82] - ERROR: 用例标id为空，执行失败
2020-08-31 13:37:14,978 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:37:15,235 - [test_07invest.py-->line:82] - ERROR: 用例投资金额为空，执行失败
2020-08-31 13:37:15,236 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:41:28,704 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:41:29,188 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:41:38,811 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:41:38,813 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:41:40,273 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:41:40,274 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:41:43,555 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:41:44,035 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:41:44,134 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:41:44,607 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:41:44,705 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:41:45,199 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:41:45,312 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:41:45,796 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:41:45,891 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:41:46,361 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:41:50,595 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:41:50,596 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:41:51,773 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:41:51,773 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:41:52,338 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:41:52,339 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:41:52,958 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:41:52,958 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:41:53,651 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:41:53,652 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:41:54,231 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:41:54,231 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:44:08,225 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:44:08,337 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:44:12,731 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:44:12,732 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:44:13,415 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:44:13,416 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:44:14,842 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:44:14,957 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:44:15,042 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:44:15,155 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:44:15,248 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:44:15,365 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:44:15,449 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:44:15,576 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:44:15,673 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:44:15,795 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:44:17,884 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:44:17,884 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:44:18,313 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:44:18,313 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:44:18,570 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:44:18,570 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:44:18,792 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:44:18,792 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:44:19,006 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:44:19,006 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:44:19,233 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:44:19,233 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:44:23,816 - [test_07invest.py-->line:82] - ERROR: 用例借款人加标，执行失败
2020-08-31 13:44:23,816 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:44:24,031 - [test_07invest.py-->line:82] - ERROR: 用例管理员审核，执行失败
2020-08-31 13:44:24,031 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:44:24,236 - [test_07invest.py-->line:82] - ERROR: 用例充值成功-整数，执行失败
2020-08-31 13:44:24,236 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:44:24,451 - [test_07invest.py-->line:82] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 13:44:24,451 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:44:24,665 - [test_07invest.py-->line:82] - ERROR: 用例投资人id为空，执行失败
2020-08-31 13:44:24,665 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:44:24,869 - [test_07invest.py-->line:82] - ERROR: 用例标id为空，执行失败
2020-08-31 13:44:24,869 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:44:25,134 - [test_07invest.py-->line:82] - ERROR: 用例投资金额为空，执行失败
2020-08-31 13:44:25,134 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:44:58,963 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:44:59,444 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:45:09,691 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:45:09,693 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:45:11,187 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:45:11,188 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:45:14,514 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:45:15,012 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:45:15,105 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:45:15,617 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:45:15,723 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:45:16,260 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:45:16,361 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:45:16,905 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:45:16,996 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:45:17,503 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:45:22,019 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:45:22,020 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:45:23,171 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:45:23,172 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:45:23,758 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:45:23,759 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:45:24,355 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:45:24,355 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:45:24,966 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:45:24,967 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:45:25,552 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:45:25,553 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:48:07,990 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:48:08,449 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:48:18,982 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:48:18,984 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:48:20,662 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:48:20,663 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:48:24,626 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:48:25,130 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:48:25,228 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:48:25,700 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:48:25,808 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:48:26,313 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:48:26,413 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:48:26,906 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:48:27,002 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:48:27,502 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:48:32,049 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:48:32,050 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:48:33,252 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:48:33,252 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:48:33,872 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:48:33,873 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:48:34,465 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:48:34,465 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:48:35,082 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:48:35,083 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:48:35,710 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:48:35,710 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:50:31,851 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:50:32,047 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:50:36,696 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:50:36,697 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:50:37,381 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:50:37,382 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:50:38,859 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:50:38,987 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:50:39,068 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:50:39,192 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:50:39,282 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:50:39,416 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:50:39,507 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:50:39,628 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:50:39,721 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:50:39,850 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:50:42,000 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:50:42,000 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:50:42,436 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:50:42,436 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:50:42,663 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:50:42,663 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:50:42,878 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:50:42,878 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:50:43,092 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:50:43,092 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:50:43,317 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:50:43,317 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:50:48,041 - [test_07invest.py-->line:82] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 13:50:48,041 - [test_07invest.py-->line:83] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:50:48,251 - [test_07invest.py-->line:82] - ERROR: 用例投资人id为空，执行失败
2020-08-31 13:50:48,251 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:50:48,479 - [test_07invest.py-->line:82] - ERROR: 用例标id为空，执行失败
2020-08-31 13:50:48,479 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:50:48,725 - [test_07invest.py-->line:82] - ERROR: 用例投资金额为空，执行失败
2020-08-31 13:50:48,725 - [test_07invest.py-->line:83] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 79, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:51:48,768 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:51:48,909 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:51:53,388 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:51:53,389 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:51:54,104 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:51:54,104 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:51:55,637 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:51:55,758 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:51:55,841 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:51:55,974 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:51:56,065 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:51:56,210 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:51:56,297 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:51:56,423 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:51:56,520 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:51:56,651 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:51:58,833 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:51:58,833 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:51:59,271 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:51:59,271 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:51:59,480 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:51:59,480 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:51:59,696 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:51:59,696 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:51:59,919 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:51:59,919 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:52:00,155 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:52:00,155 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:52:04,836 - [test_07invest.py-->line:84] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 13:52:04,836 - [test_07invest.py-->line:85] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:52:05,042 - [test_07invest.py-->line:84] - ERROR: 用例投资人id为空，执行失败
2020-08-31 13:52:05,042 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:52:05,256 - [test_07invest.py-->line:84] - ERROR: 用例标id为空，执行失败
2020-08-31 13:52:05,256 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:52:05,470 - [test_07invest.py-->line:84] - ERROR: 用例投资金额为空，执行失败
2020-08-31 13:52:05,471 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:53:48,412 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 13:53:48,536 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:53:53,041 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:53:53,042 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 13:53:53,732 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 13:53:53,733 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 13:53:55,203 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 13:53:55,323 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 13:53:55,402 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 13:53:55,537 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:53:55,619 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 13:53:55,752 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:53:55,837 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 13:53:55,972 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 13:53:56,056 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 13:53:56,186 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 13:53:58,361 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 13:53:58,362 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:53:58,784 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 13:53:58,784 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 13:53:58,994 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 13:53:58,994 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:53:59,207 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 13:53:59,207 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 13:53:59,425 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 13:53:59,425 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 13:53:59,638 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 13:53:59,638 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 13:54:04,286 - [test_07invest.py-->line:84] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 13:54:04,286 - [test_07invest.py-->line:85] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 13:54:04,486 - [test_07invest.py-->line:84] - ERROR: 用例投资人id为空，执行失败
2020-08-31 13:54:04,486 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:54:04,696 - [test_07invest.py-->line:84] - ERROR: 用例标id为空，执行失败
2020-08-31 13:54:04,696 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 13:54:04,927 - [test_07invest.py-->line:84] - ERROR: 用例投资金额为空，执行失败
2020-08-31 13:54:04,927 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 14:06:32,715 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:06:32,843 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:06:37,383 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:06:37,385 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:06:38,126 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:06:38,129 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:06:39,631 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:06:39,756 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:06:39,857 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:06:39,989 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:06:40,069 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:06:40,190 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:06:40,281 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:06:40,400 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:06:40,485 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:06:40,625 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:06:42,897 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:06:42,897 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:06:43,336 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:06:43,337 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:06:43,573 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:06:43,573 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:06:43,787 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:06:43,788 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:06:43,987 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:06:43,987 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:06:44,189 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:06:44,189 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:06:48,914 - [test_07invest.py-->line:84] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 14:06:48,914 - [test_07invest.py-->line:85] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 14:06:49,123 - [test_07invest.py-->line:84] - ERROR: 用例投资人id为空，执行失败
2020-08-31 14:06:49,123 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 14:06:49,342 - [test_07invest.py-->line:84] - ERROR: 用例标id为空，执行失败
2020-08-31 14:06:49,342 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 14:06:49,576 - [test_07invest.py-->line:84] - ERROR: 用例投资金额为空，执行失败
2020-08-31 14:06:49,576 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 14:08:04,924 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:08:05,059 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:08:09,595 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:08:09,597 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:08:10,317 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:08:10,320 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:08:11,851 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:08:11,965 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:08:12,058 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:08:12,173 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:08:12,258 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:08:12,396 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:08:12,491 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:08:12,627 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:08:12,717 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:08:12,839 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:08:15,009 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:08:15,009 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:08:15,436 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:08:15,436 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:08:15,654 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:08:15,654 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:08:15,871 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:08:15,872 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:08:16,108 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:08:16,108 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:08:16,334 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:08:16,335 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:08:21,262 - [test_07invest.py-->line:84] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 14:08:21,263 - [test_07invest.py-->line:85] - ERROR: 1003 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 0
2020-08-31 14:08:21,460 - [test_07invest.py-->line:84] - ERROR: 用例投资人id为空，执行失败
2020-08-31 14:08:21,461 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 14:08:21,688 - [test_07invest.py-->line:84] - ERROR: 用例标id为空，执行失败
2020-08-31 14:08:21,689 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 14:08:21,894 - [test_07invest.py-->line:84] - ERROR: 用例投资金额为空，执行失败
2020-08-31 14:08:21,894 - [test_07invest.py-->line:85] - ERROR: 1003 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 81, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1003 != 1
2020-08-31 14:09:05,892 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:09:06,391 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:09:16,348 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:09:16,350 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:09:17,754 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:09:17,758 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:09:21,114 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:09:21,586 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:09:21,696 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:09:22,193 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:09:22,291 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:09:22,831 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:09:22,924 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:09:23,438 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:09:23,551 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:09:24,036 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:09:27,949 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:09:27,951 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:09:29,151 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:09:29,152 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:09:29,727 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:09:29,727 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:09:30,287 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:09:30,289 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:09:30,881 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:09:30,882 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:09:31,497 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:09:31,498 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:23:05,148 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:23:05,278 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:23:09,722 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:23:09,726 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:23:10,424 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:23:10,426 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:23:11,891 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:23:12,011 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:23:12,097 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:23:12,240 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:23:12,354 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:23:12,479 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:23:12,557 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:23:12,689 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:23:12,768 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:23:12,904 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:23:14,962 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:23:14,962 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:23:15,423 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:23:15,424 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:23:15,642 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:23:15,643 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:23:15,910 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:23:15,910 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:23:16,130 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:23:16,130 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:23:16,347 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:23:16,347 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:23:21,286 - [test_07invest.py-->line:85] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 14:23:21,286 - [test_07invest.py-->line:86] - ERROR: 1004 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 82, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 0
2020-08-31 14:23:21,515 - [test_07invest.py-->line:85] - ERROR: 用例投资人id为空，执行失败
2020-08-31 14:23:21,516 - [test_07invest.py-->line:86] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 82, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-08-31 14:23:21,750 - [test_07invest.py-->line:85] - ERROR: 用例标id为空，执行失败
2020-08-31 14:23:21,751 - [test_07invest.py-->line:86] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 82, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-08-31 14:23:21,966 - [test_07invest.py-->line:85] - ERROR: 用例投资金额为空，执行失败
2020-08-31 14:23:21,967 - [test_07invest.py-->line:86] - ERROR: 1004 != 1
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 82, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1004 != 1
2020-08-31 14:24:10,198 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:24:10,320 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:24:14,801 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:24:14,802 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:24:15,499 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:24:15,500 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:24:17,036 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:24:17,172 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:24:17,255 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:24:17,387 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:24:17,479 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:24:17,609 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:24:17,699 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:24:17,817 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:24:17,902 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:24:18,022 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:24:20,143 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:24:20,143 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:24:20,575 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:24:20,576 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:24:20,810 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:24:20,811 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:24:21,035 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:24:21,035 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:24:21,252 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:24:21,252 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:24:21,478 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:24:21,478 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:24:26,315 - [test_07invest.py-->line:85] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 14:24:26,316 - [test_07invest.py-->line:86] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 82, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:28:13,250 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:28:13,373 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:28:17,891 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:28:17,895 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:28:18,603 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:28:18,606 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:28:20,116 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:28:20,237 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:28:20,338 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:28:20,477 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:28:20,561 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:28:20,726 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:28:20,814 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:28:20,944 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:28:21,045 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:28:21,183 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:28:23,222 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:28:23,222 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:28:23,648 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:28:23,648 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:28:23,870 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:28:23,871 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:28:24,093 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:28:24,093 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:28:24,335 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:28:24,336 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:28:24,543 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:28:24,543 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:28:29,325 - [test_07invest.py-->line:86] - ERROR: 用例投资人正常投资，执行失败
2020-08-31 14:28:29,325 - [test_07invest.py-->line:87] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_07invest.py", line 83, in test_invest
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:34:24,335 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:34:24,468 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:34:29,055 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:34:29,056 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:34:29,770 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:34:29,772 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:34:31,323 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:34:31,446 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:34:31,531 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:34:31,653 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:34:31,737 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:34:31,864 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:34:31,958 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:34:32,076 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:34:32,160 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:34:32,276 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:34:34,498 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:34:34,498 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:34:34,930 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:34:34,930 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:34:35,128 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:34:35,129 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:34:35,332 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:34:35,333 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:34:35,545 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:34:35,586 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:34:35,792 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:34:35,792 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:37:17,511 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:37:17,644 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:37:22,280 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:37:22,281 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:37:23,016 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:37:23,017 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:37:24,598 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:37:24,724 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:37:24,808 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:37:24,925 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:37:25,024 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:37:25,146 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:37:25,225 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:37:25,358 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:37:25,445 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:37:25,576 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:37:27,829 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:37:27,829 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:37:28,262 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:37:28,263 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:37:28,482 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:37:28,482 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:37:28,698 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:37:28,698 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:37:28,898 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:37:28,899 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:37:29,100 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:37:29,100 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:38:55,296 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:38:55,420 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:39:00,017 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:39:00,018 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:39:00,753 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:39:00,753 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:39:02,295 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:39:02,418 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:39:02,501 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:39:02,627 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:39:02,728 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:39:02,843 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:39:02,922 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:39:03,040 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:39:03,120 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:39:03,240 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:39:05,380 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:39:05,380 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:39:05,801 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:39:05,801 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:39:06,014 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:39:06,014 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:39:06,239 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:39:06,239 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:39:06,451 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:39:06,451 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:39:06,677 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:39:06,677 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:40:12,636 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:40:12,759 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:40:17,209 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:40:17,212 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:40:17,888 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:40:17,889 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:40:19,380 - [test_03recharge.py-->line:91] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:40:19,493 - [test_03recharge.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 87, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:40:19,582 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:40:19,719 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:40:19,813 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:40:19,947 - [test_03recharge.py-->line:93] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:40:20,072 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:40:20,198 - [test_03recharge.py-->line:93] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:40:20,294 - [test_03recharge.py-->line:91] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:40:20,419 - [test_03recharge.py-->line:93] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 88, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:40:22,501 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:40:22,501 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:40:22,935 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:40:22,936 - [test_04withdraw.py-->line:79] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 75, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:40:23,163 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:40:23,163 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:40:23,378 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:40:23,378 - [test_04withdraw.py-->line:79] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:40:23,604 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:40:23,604 - [test_04withdraw.py-->line:79] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:40:23,814 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:40:23,815 - [test_04withdraw.py-->line:79] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 76, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:42:43,306 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 14:42:43,432 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:42:47,979 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:42:47,982 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 14:42:48,700 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 14:42:48,700 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 14:42:50,245 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 14:42:50,366 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 14:42:50,466 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 14:42:50,600 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:42:50,684 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 14:42:50,818 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:42:50,910 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 14:42:51,056 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 14:42:51,146 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 14:42:51,291 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 14:42:53,430 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 14:42:53,431 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:42:53,854 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 14:42:53,854 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 14:42:54,062 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 14:42:54,063 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 14:42:54,281 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 14:42:54,281 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 14:42:54,490 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 14:42:54,490 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 14:42:54,706 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 14:42:54,707 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:20:22,521 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 17:20:22,662 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:20:28,370 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:20:28,371 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 17:20:29,159 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:20:29,161 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 17:20:30,831 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 17:20:30,980 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 17:20:31,062 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 17:20:31,215 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:20:31,302 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 17:20:31,505 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:20:31,600 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 17:20:31,750 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 17:20:31,848 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 17:20:32,012 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 17:20:34,163 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 17:20:34,163 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:20:34,651 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 17:20:34,652 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:20:34,910 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 17:20:34,910 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:20:35,140 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 17:20:35,141 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 17:20:35,372 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 17:20:35,372 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 17:20:35,617 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 17:20:35,618 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:23:42,857 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 17:23:43,013 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:23:47,999 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:23:48,001 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 17:23:48,756 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:23:48,757 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 17:23:50,358 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 17:23:50,520 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 17:23:50,608 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 17:23:50,766 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:23:50,880 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 17:23:51,072 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:23:51,201 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 17:23:51,339 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 17:23:51,438 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 17:23:51,597 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 17:23:54,847 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 17:23:54,848 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:23:55,706 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 17:23:55,706 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:23:55,978 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 17:23:55,978 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:23:56,254 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 17:23:56,254 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 17:23:56,532 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 17:23:56,533 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 17:23:56,803 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 17:23:56,804 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:26:36,870 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 17:26:37,449 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:26:48,938 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:26:48,939 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 17:26:50,578 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:26:50,580 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 17:26:54,385 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 17:26:54,941 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 17:26:55,044 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 17:26:55,591 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:26:55,704 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 17:26:56,280 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:26:56,378 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 17:26:56,937 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 17:26:57,040 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 17:26:57,638 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 17:27:02,545 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 17:27:02,547 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:27:03,879 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 17:27:03,880 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:27:04,586 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 17:27:04,587 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:27:05,254 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 17:27:05,255 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 17:27:05,922 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 17:27:05,923 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 17:27:06,582 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 17:27:06,584 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:27:48,692 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 17:27:49,276 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:28:00,419 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:28:00,423 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 17:28:02,113 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:28:02,117 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 17:28:05,936 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 17:28:06,489 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 17:28:06,588 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 17:28:07,134 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:28:07,254 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 17:28:07,797 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:28:07,901 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 17:28:08,452 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 17:28:08,557 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 17:28:09,169 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 17:28:14,265 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 17:28:14,265 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:28:15,596 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 17:28:15,597 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:28:16,274 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 17:28:16,274 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:28:16,915 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 17:28:16,916 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 17:28:17,567 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 17:28:17,568 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 17:28:18,251 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 17:28:18,252 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:33:31,512 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 17:33:32,040 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:33:43,329 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:33:43,331 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 17:33:44,987 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:33:44,988 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 17:33:49,005 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 17:33:49,551 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 17:33:49,660 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 17:33:50,223 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:33:50,322 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 17:33:50,871 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:33:51,010 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 17:33:51,568 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 17:33:51,658 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 17:33:52,215 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 17:33:57,398 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 17:33:57,399 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:33:58,737 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 17:33:58,738 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:33:59,426 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 17:33:59,428 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:34:00,126 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 17:34:00,127 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 17:34:00,789 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 17:34:00,791 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 17:34:01,464 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 17:34:01,464 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:38:44,407 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 17:38:44,981 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:38:56,366 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:38:56,369 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 17:38:57,970 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 17:38:57,971 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 17:39:01,707 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 17:39:02,259 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 17:39:02,381 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 17:39:02,941 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:39:03,039 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 17:39:03,615 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:39:03,711 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 17:39:04,270 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 17:39:04,385 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 17:39:04,988 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 17:39:09,791 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 17:39:09,792 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:39:11,101 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 17:39:11,102 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 17:39:11,776 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 17:39:11,776 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 17:39:12,442 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 17:39:12,443 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 17:39:13,126 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 17:39:13,127 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 17:39:13,786 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 17:39:13,788 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:42:20,490 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 18:42:21,141 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:42:32,944 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:42:32,947 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 18:42:34,579 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:42:34,580 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 18:42:38,317 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 18:42:38,924 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 18:42:39,003 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 18:42:39,631 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:42:39,701 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 18:42:40,410 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:42:40,492 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 18:42:41,110 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 18:42:41,180 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 18:42:41,848 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 18:42:46,683 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 18:42:46,685 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:42:48,109 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 18:42:48,109 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:42:48,789 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 18:42:48,789 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:42:49,503 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 18:42:49,503 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 18:42:50,217 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 18:42:50,218 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 18:42:50,906 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 18:42:50,906 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:43:03,922 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 18:43:03,922 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:43:05,960 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 18:43:05,962 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:45:21,448 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 18:45:21,593 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:45:26,001 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:45:26,003 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 18:45:27,502 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:45:27,503 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 18:45:28,955 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 18:45:29,107 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 18:45:29,154 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 18:45:29,325 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:45:29,374 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 18:45:29,644 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:45:29,698 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 18:45:29,915 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 18:45:29,966 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 18:45:30,144 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 18:45:32,439 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 18:45:32,439 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:45:32,857 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 18:45:32,857 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:45:33,076 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 18:45:33,076 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:45:33,308 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 18:45:33,308 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 18:45:33,512 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 18:45:33,512 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 18:45:33,722 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 18:45:33,722 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:48:29,095 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 18:48:29,247 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:48:34,119 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:48:34,120 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 18:48:34,860 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:48:34,861 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 18:48:37,305 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 18:48:37,497 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 18:48:37,544 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 18:48:37,725 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:48:37,776 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 18:48:38,006 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:48:38,056 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 18:48:38,223 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 18:48:38,272 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 18:48:38,419 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 18:48:40,589 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 18:48:40,589 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:48:40,970 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 18:48:40,970 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 18:48:41,167 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 18:48:41,167 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:48:41,360 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 18:48:41,360 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 18:48:41,556 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 18:48:41,557 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 18:48:41,806 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 18:48:41,806 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 18:48:46,853 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 18:48:46,853 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 18:48:47,526 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 18:48:47,526 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:13:36,906 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:13:37,039 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:13:41,896 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:13:41,899 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:13:42,660 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:13:42,660 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:13:44,307 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:13:44,452 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:13:44,534 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:13:44,700 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:13:44,787 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:13:44,977 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:13:45,072 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:13:45,218 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:13:45,319 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:13:45,467 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:13:47,878 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:13:47,878 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:13:48,339 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:13:48,339 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:13:48,589 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:13:48,590 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:13:48,821 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:13:48,822 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:13:49,061 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:13:49,061 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:13:49,309 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:13:49,309 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:13:55,432 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:13:55,432 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:13:56,163 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:13:56,163 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:15:39,116 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:15:39,288 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:15:44,073 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:15:44,074 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:15:44,807 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:15:44,809 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:15:46,689 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:15:46,836 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:15:46,922 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:15:47,139 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:15:47,226 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:15:47,386 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:15:47,477 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:15:47,631 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:15:47,710 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:15:47,850 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:15:50,332 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:15:50,332 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:15:50,811 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:15:50,812 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:15:51,052 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:15:51,052 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:15:51,286 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:15:51,286 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:15:51,526 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:15:51,526 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:15:51,769 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:15:51,769 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:15:57,871 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:15:57,871 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:15:58,596 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:15:58,596 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:16:54,316 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:16:54,462 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:17:00,388 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:17:00,389 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:17:01,198 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:17:01,198 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:17:02,855 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:17:02,993 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:17:03,079 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:17:03,278 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:17:03,362 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:17:03,504 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:17:03,596 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:17:03,749 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:17:03,829 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:17:03,978 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:17:06,331 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:17:06,332 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:17:06,803 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:17:06,803 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:17:07,047 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:17:07,047 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:17:07,302 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:17:07,302 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:17:07,532 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:17:07,532 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:17:07,781 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:17:07,781 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:17:14,015 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:17:14,015 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:17:14,750 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:17:14,750 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:17:15,331 - [test_09info.py-->line:45] - ERROR: 1005 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_09info.py", line 42, in test_info
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1005 != 0
2020-08-31 19:17:15,332 - [test_09info.py-->line:46] - ERROR: 用例获取用户信息成功，执行未通过
2020-08-31 19:19:24,537 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:19:24,676 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:19:29,550 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:19:29,554 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:19:30,289 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:19:30,290 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:19:31,847 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:19:31,990 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:19:32,074 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:19:32,225 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:19:32,323 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:19:32,517 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:19:32,601 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:19:32,742 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:19:32,840 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:19:32,990 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:19:35,298 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:19:35,298 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:19:35,878 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:19:35,878 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:19:36,112 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:19:36,113 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:19:36,352 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:19:36,352 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:19:36,597 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:19:36,597 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:19:36,832 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:19:36,832 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:19:42,893 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:19:42,894 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:19:43,649 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:19:43,650 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:20:13,542 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:20:13,693 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:20:18,623 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:20:18,627 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:20:19,418 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:20:19,420 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:20:21,049 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:20:21,194 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:20:21,308 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:20:21,493 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:20:21,577 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:20:21,720 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:20:21,817 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:20:21,964 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:20:22,052 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:20:22,202 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:20:24,582 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:20:24,582 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:20:25,073 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:20:25,073 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:20:25,317 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:20:25,318 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:20:25,556 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:20:25,556 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:20:25,797 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:20:25,797 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:20:26,041 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:20:26,042 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:20:32,058 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:20:32,058 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:20:32,813 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:20:32,813 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:30:02,635 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:30:02,787 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:30:07,816 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:30:07,820 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:30:08,690 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:30:08,691 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:30:10,430 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:30:10,708 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:30:10,798 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:30:10,988 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:30:11,081 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:30:11,250 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:30:11,337 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:30:11,490 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:30:11,580 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:30:11,738 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:30:14,405 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:30:14,405 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:30:14,975 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:30:14,976 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:30:15,279 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:30:15,279 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:30:15,551 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:30:15,551 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:30:15,819 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:30:15,819 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:30:16,135 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:30:16,135 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:30:22,551 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:30:22,551 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:30:23,269 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:30:23,270 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:32:17,869 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:32:18,024 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:32:22,762 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:32:22,763 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:32:23,612 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:32:23,614 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:32:25,192 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:32:25,431 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:32:25,480 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:32:25,662 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:32:25,711 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:32:25,862 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:32:25,910 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:32:26,080 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:32:26,133 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:32:26,296 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:32:28,537 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:32:28,537 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:32:28,959 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:32:28,959 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:32:29,152 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:32:29,152 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:32:29,356 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:32:29,356 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:32:29,558 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:32:29,558 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:32:29,893 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:32:29,893 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:32:35,048 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:32:35,048 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:32:35,671 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:32:35,671 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:38:44,647 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:38:44,789 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:38:48,918 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:38:48,918 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:38:49,605 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:38:49,608 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:38:50,955 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:38:51,152 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:38:51,205 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:38:51,355 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:38:51,406 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:38:51,550 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:38:51,601 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:38:51,749 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:38:51,800 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:38:51,955 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:38:53,872 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:38:53,872 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:38:54,277 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:38:54,277 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:38:54,467 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:38:54,467 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:38:54,672 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:38:54,672 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:38:54,875 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:38:54,875 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:38:55,136 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:38:55,137 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:38:59,733 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:38:59,733 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:39:00,333 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:39:00,333 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:48:39,710 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-08-31 19:48:39,872 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:48:44,142 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:48:44,143 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-08-31 19:48:44,859 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:48:44,860 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-08-31 19:48:46,257 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-08-31 19:48:46,549 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-31 19:48:46,594 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-08-31 19:48:46,784 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:48:46,831 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-08-31 19:48:47,030 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:48:47,077 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-08-31 19:48:47,292 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-31 19:48:47,340 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-31 19:48:47,514 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-31 19:48:49,644 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-08-31 19:48:49,644 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:48:50,075 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-08-31 19:48:50,075 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-31 19:48:50,324 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-08-31 19:48:50,324 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:48:50,545 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-08-31 19:48:50,545 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-08-31 19:48:50,762 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-08-31 19:48:50,762 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-08-31 19:48:51,060 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-08-31 19:48:51,060 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-08-31 19:48:57,097 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-08-31 19:48:57,097 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-31 19:48:57,796 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-08-31 19:48:57,796 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:39:39,321 - [test_01login.py-->line:45] - ERROR: 用例登录成功,执行未通过
2020-09-01 09:39:39,506 - [test_01login.py-->line:47] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 42, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:39:43,980 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:39:43,981 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-01 09:39:44,683 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:39:44,685 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-01 09:39:46,152 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-01 09:39:46,344 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-01 09:39:46,402 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-01 09:39:46,553 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:39:46,610 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-01 09:39:46,770 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:39:46,823 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-01 09:39:46,980 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-01 09:39:47,034 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-01 09:39:47,186 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-01 09:39:49,151 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-01 09:39:49,151 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:39:49,584 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-01 09:39:49,585 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:39:49,813 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-01 09:39:49,813 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:39:50,028 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-01 09:39:50,029 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-01 09:39:50,242 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-01 09:39:50,242 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-01 09:39:50,503 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-01 09:39:50,504 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:39:56,218 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-01 09:39:56,218 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:39:56,844 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-01 09:39:56,845 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:47:36,931 - [test_01login.py-->line:47] - ERROR: 用例手机号为空,执行未通过
2020-09-01 09:47:37,034 - [test_01login.py-->line:47] - ERROR: 用例密码为空,执行未通过
2020-09-01 09:47:37,145 - [test_01login.py-->line:47] - ERROR: 用例手机号未注册,执行未通过
2020-09-01 09:47:37,247 - [test_01login.py-->line:47] - ERROR: 用例密码错误,执行未通过
2020-09-01 09:47:37,357 - [test_01login.py-->line:47] - ERROR: 用例手机号格式错误,执行未通过
2020-09-01 09:47:39,791 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:47:39,792 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-01 09:47:40,336 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:47:40,337 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-01 09:47:41,284 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-01 09:47:41,447 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-01 09:47:41,549 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-01 09:47:41,654 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-01 09:47:41,761 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-01 09:47:43,296 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-01 09:47:43,297 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:47:43,529 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-01 09:47:43,529 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:47:43,637 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-01 09:47:43,638 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:47:43,745 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-01 09:47:43,745 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-01 09:47:43,854 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-01 09:47:43,855 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-01 09:47:44,017 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-01 09:47:44,018 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:47:47,765 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-01 09:47:47,765 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:47:48,150 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-01 09:47:48,150 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:48:00,343 - [test_01login.py-->line:47] - ERROR: 用例手机号为空,执行未通过
2020-09-01 09:48:00,497 - [test_01login.py-->line:49] - ERROR: 1 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-09-01 09:48:00,550 - [test_01login.py-->line:47] - ERROR: 用例密码为空,执行未通过
2020-09-01 09:48:00,707 - [test_01login.py-->line:49] - ERROR: 1 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-09-01 09:48:00,759 - [test_01login.py-->line:47] - ERROR: 用例手机号未注册,执行未通过
2020-09-01 09:48:00,928 - [test_01login.py-->line:49] - ERROR: 1001 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 0
2020-09-01 09:48:00,979 - [test_01login.py-->line:47] - ERROR: 用例密码错误,执行未通过
2020-09-01 09:48:01,126 - [test_01login.py-->line:49] - ERROR: 1001 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 0
2020-09-01 09:48:01,176 - [test_01login.py-->line:47] - ERROR: 用例手机号格式错误,执行未通过
2020-09-01 09:48:01,328 - [test_01login.py-->line:49] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_01login.py", line 44, in test_login
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:48:04,562 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:48:04,563 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-01 09:48:05,232 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:48:05,233 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-01 09:48:06,611 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-01 09:48:06,816 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-01 09:48:06,867 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-01 09:48:07,009 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:48:07,062 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-01 09:48:07,222 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:48:07,274 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-01 09:48:07,426 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-01 09:48:07,480 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-01 09:48:07,649 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-01 09:48:09,944 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-01 09:48:09,944 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:48:10,368 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-01 09:48:10,368 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:48:10,572 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-01 09:48:10,572 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:48:10,773 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-01 09:48:10,773 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-01 09:48:10,979 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-01 09:48:10,980 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-01 09:48:11,243 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-01 09:48:11,243 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:48:16,918 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-01 09:48:16,918 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:48:17,561 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-01 09:48:17,561 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:49:42,258 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:49:42,260 - [test_02register.py-->line:65] - ERROR: 用例注册名11位,测试未通过
2020-09-01 09:49:42,944 - [test_02register.py-->line:64] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_02register.py", line 52, in test_register
    self.assertEqual(expected['code'], res['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:49:42,945 - [test_02register.py-->line:65] - ERROR: 用例手机号为字符串类型,测试未通过
2020-09-01 09:49:44,339 - [test_03recharge.py-->line:78] - ERROR: 用例不输入金额，执行未通过
2020-09-01 09:49:44,519 - [test_03recharge.py-->line:80] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 74, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-09-01 09:49:44,569 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为负数，执行未通过
2020-09-01 09:49:44,807 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:49:44,857 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额为500001，执行未通过
2020-09-01 09:49:45,021 - [test_03recharge.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:49:45,072 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额非数字，执行未通过
2020-09-01 09:49:45,224 - [test_03recharge.py-->line:80] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-09-01 09:49:45,273 - [test_03recharge.py-->line:78] - ERROR: 用例充值金额小数点3位，执行未通过
2020-09-01 09:49:45,425 - [test_03recharge.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_03recharge.py", line 75, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-09-01 09:49:47,453 - [test_04withdraw.py-->line:67] - ERROR: 用例会员id为数值：执行失败
2020-09-01 09:49:47,453 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:49:47,877 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为0：执行失败
2020-09-01 09:49:47,878 - [test_04withdraw.py-->line:68] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 64, in test_withdraw
    self.assertEqual(jsonpath(res, '$.code')[0], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-09-01 09:49:48,085 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为负数：执行失败
2020-09-01 09:49:48,085 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:49:48,291 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额为空：执行失败
2020-09-01 09:49:48,291 - [test_04withdraw.py-->line:68] - ERROR: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额为空' != '金额为空'
- 余额为空
? ^
+ 金额为空
? ^

2020-09-01 09:49:48,494 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-3位小数：执行失败
2020-09-01 09:49:48,495 - [test_04withdraw.py-->line:68] - ERROR: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额小数超过两位' != '金额小数超过两位'
- 余额小数超过两位
? ^
+ 金额小数超过两位
? ^

2020-09-01 09:49:48,702 - [test_04withdraw.py-->line:67] - ERROR: 用例提现金额-大于50万：执行失败
2020-09-01 09:49:48,703 - [test_04withdraw.py-->line:68] - ERROR: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_04withdraw.py", line 65, in test_withdraw
    self.assertEqual(jsonpath(res, '$.msg')[0], expected['msg'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 1203, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于5000000' != '金额必须大于0并且小于或者等于500000'
- 余额必须大于0并且小于或者等于5000000
? ^                    -
+ 金额必须大于0并且小于或者等于500000
? ^

2020-09-01 09:49:54,359 - [test_08update.py-->line:49] - ERROR: 用例修改昵称成功,执行失败
2020-09-01 09:49:54,359 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-09-01 09:49:54,954 - [test_08update.py-->line:49] - ERROR: 用例昵称长度10位,执行失败
2020-09-01 09:49:54,955 - [test_08update.py-->line:50] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\practice\py31\project01\testcases\test_08update.py", line 46, in test_update
    self.assertEqual(res['code'], expected['code'])
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\ProgramData\Anaconda3\lib\unittest\case.py", line 822, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
